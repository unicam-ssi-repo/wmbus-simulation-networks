#!/bin/bash
################################################################################################################
# Script top extract data for plotting
#
################################################################################################################


####################################     BEGIN VARIABLES   #####################################################

#Set the name of the type of sims
sim_list=(nHnWnD  nHnWwD  nHwWnD  nHwWwD  wHnWnD  wHnWwD  wHwWnD  wHwWwD)
#Number of packets as range
pkt_start=3
pkt_end=23
#pkt_end=23

#Root dir of the results as absolute path
root_dir="/home/lvlz/data/Work/Projects/Light\ routing/MultiSimulationWMBUS/results/"

#Root dir of the results as name
output_root_dir="out"

#Data file name
data_file_name="readableFormat.txt"

convergence_ok=0.0

my_wait=15
##################################     END  VARIABLES   #######################################################
# Data file content 17 lines:
# 1 Convergence (0-yes,1-no):	0.0
# 2 RM: Device-Device Request Failed Probability :	1.5343562364578247
# 3 RM: Device-Device Request Success Probability :	98.46564483642578
# 4 RM: Device-Device Response Failed Probability :	1.9661016464233398
# 5 RM: Device-Device Response Success Probability :	98.03389739990234
# 6 RM: Master Fault %:	2.180376610505451
# 7 RM: Master average path length:	1.4995044598612488
# 8 RM: Request Header size	144.0
# 9 RM: Request Packet Block count:	2.0
# 10 RM: Request Packet size	6.0
# 11 RM: Request Payload size (ecc):	6.0
# 12 RM: Request Payload size (no-ecc):	6.0
# 13 RM : Response Header size	144.0
# 14 RM: Response Packet Block count:	2.0
# 15 RM: Response Packet size	5.0
# 16 RM: Response Payload size (ecc):	5.0
# 17 RM: Response Payload size (no-ecc):	5.0
# 
# 
data_list=(d2dReqFailProb d2dReqOkProb d2dRespFailProb d2dRespOkProb MFault MAvgPatLen ReqHeaderSize ReqPktBlkCnt ReqPktSize ReqPyldSizeECC ReqPyldSizeNECC RespHdrSize RespPktBlkCnt RespPktSize RespPyldSizeECC RespPyldSizeNECC)


# lets check convergence first

current_dir=$(pwd)

tot_conv=0
tot_nonconv=0
tot_files=0

echo "moving into $root_dir"

pushd $root_dir  > /dev/null

for i in "${sim_list[@]}"
 do
  for ((p=pkt_start;p<=pkt_end;p++));
   do
    data_dir=$root_dir$p"/0/"$i 
    #echo "Moving to $data_dir"
    pushd $data_dir  > /dev/null
    convergence=$(head -n 1 $data_file_name  | awk '{print $3}')
    (( tot_files += 1 ))
    if [ ${convergence} == 0.0 ] 
    then 
      #echo "$data_dir: convergence"
      ((tot_conv += 1))
    else 
      ((tot_nonconv += 1))
       echo "$data_dir: non-convergence"
    fi
   
    popd > /dev/null
   done
done

popd > /dev/null

echo "Total files = $tot_files"
echo "Total convergence = $tot_conv"
echo "Total non-convergence = $tot_nonconv"


 if [ ${tot_nonconv} -gt 0 ] 
 then
   echo "There are $tot_nonconv non-converges!!! Exiting..."
   #exit
 else
   echo "All converged!!! Creating data files for plotting..."
 fi
 
 
 
 
#Assuming that all converged go ahead and create data files:


mkdir $root_dir$output_root_dir

for i in "${sim_list[@]}"
 do
  mkdir $root_dir$output_root_dir"/"$i
  for ((p=pkt_start;p<=pkt_end;p++));
   do
    data_dir=$root_dir$p"/0/"$i   
    #echo "Moving to $data_dir"
    pushd $data_dir > /dev/null
    line_idx=2
    for d in "${data_list[@]}"
     do
        data=$(sed -n "${line_idx}p"< readableFormat.txt | awk '{print $NF}')
        plot_data_file_name="$root_dir$output_root_dir/$i/$i-$d.txt"
        #echo "Cat data $line_idx to file $plot_data_file_name --- [$p $data]"
        echo "$p $data" >> $plot_data_file_name
        ((line_idx += 1))
     done
    popd > /dev/null
   done
done


echo "Data files for plotting are created! There are 2 columns: Number of nodes and the related data!"

















